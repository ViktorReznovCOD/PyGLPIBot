import telebot, mysql.connector, time
TokenBot1 = "5831647116:AAHDf0kOEPaEBZk5-W05gQZueSFuyzsdDDA"
bot = telebot.TeleBot(TokenBot1)
mydb = mysql.connector.connect(database='glpi', host='localhost', user='glpi', password='123')

''' bot.delete_webhook()
√© usada em bots do Telegram para desativar o webhook previamente configurado. Um webhook √© uma forma de receber atualiza√ß√µes em tempo real do Telegram sempre que um evento ocorre em uma conversa com o bot, como quando um usu√°rio envia uma mensagem.

Quando um webhook est√° ativo, o Telegram envia automaticamente as atualiza√ß√µes para o URL especificado no webhook, em vez de voc√™ ter que verificar constantemente o servidor do Telegram em busca de novas mensagens. Isso pode ser √∫til em cen√°rios em que voc√™ deseja que seu bot responda instantaneamente √†s mensagens dos usu√°rios.

No entanto, h√° situa√ß√µes em que voc√™ pode querer desativar o webhook. Por exemplo:

Depura√ß√£o e teste: Durante o desenvolvimento de um bot, voc√™ pode querer desativar o webhook temporariamente para facilitar o teste e a depura√ß√£o do c√≥digo do bot sem que as atualiza√ß√µes sejam enviadas automaticamente para o seu servidor.

Mudan√ßa de abordagem: Se voc√™ estava usando um webhook e decide mudar para um m√©todo de polling (verifica√ß√£o peri√≥dica das atualiza√ß√µes) para receber mensagens, voc√™ deve desativar o webhook.

Manuten√ß√£o do servidor: Em alguns casos, voc√™ pode precisar desativar o webhook temporariamente para manuten√ß√£o do servidor onde o bot est√° hospedado.

Para desativar o webhook e voltar a usar o m√©todo de polling para receber mensagens, voc√™ pode chamar a fun√ß√£o bot.delete_webhook().

Exemplo de uso:

python
Copy code

import telebot

# Inicialize o bot
bot = telebot.TeleBot("TOKEN_DO_SEU_BOT")

# Desative o webhook
bot.delete_webhook()

# Resto do seu c√≥digo para configurar a intera√ß√£o com os usu√°rios usando polling
bot.infinity_polling()
Lembre-se de que, ap√≥s desativar o webhook, voc√™ precisar√° usar um loop de polling, como bot.infinity_polling(), para verificar e responder √†s mensagens dos usu√°rios.


'''
@bot.message_handler(commands=['Ajuda']) # comando que chama a fun√ß√£o abaixo"
def ajuda(message):
    print('Menu ajuda!...')
    bot.reply_to(message, f"""‚ÑπÔ∏è Bem-vindo √† se√ß√£o de Ajuda!\n\n
        Aqui est√£o algumas op√ß√µes para voc√™:\n
        /Iniciar: Abre um novo chamado.\n
        /Meus_chamados: Lista seus chamados abertos.\n\n
        ‚ÑπÔ∏è Para acessar o GLPI, acesse: [GLPI](http://172.16.41.19/glpi)""")
    
@bot.message_handler(commands=['Abrir_chamado'])
def AbrirChamado(message):
    print('Abrir chamados!...')
    msg = bot.reply_to(message, f'ü§ñ Para abrir um novo chamado, informe um t√≠tulo:')
    bot.register_next_step_handler(msg, capturaTitulo)
def capturaTitulo (message):
    global titulo 
    titulo = message.text
    print('Capturei o titulo: -',titulo)
    msg = bot.reply_to(message, f'ü§ñ Conte, como podemos te ajudar?')
    bot.register_next_step_handler(msg, descricaoChamado)
def descricaoChamado (message):
    descricao = message.text
    print('Capturei a descri√ß√£o: -',descricao)
    msg = bot.reply_to(message,f'ü§ñ Certo!... um momento pfvr....')
    # PROCESSA INFORMA√á√ïES E FAZ O INSERT + COMMIT NO BANCO
    bot.send_message(message.chat.id, f'''
                     ü§ñ Chamado aberto com sucesso
                     ‚èπÔ∏è Titulo: {titulo}
                     ‚èπÔ∏è Descri√ß√£o :{descricao}
                     ''')
@bot.message_handler(commands=['Meus_chamados'])
def Meus_chamados(message):
    bot.send_message(chat_id=message.chat.id,text='um momento por favor...')
    time.sleep(2)
    if mydb.is_connected():
        cursor = mydb.cursor() 
        cursor.execute("SELECT id,name FROM glpi_tickets;")
        resultados = cursor.fetchall()
        response = f"Os chamados abertos s√£o:\n"
        for resultado in resultados:
            i=+1 # contador
            bot.reply_to(message,f'{resultado[i]}')
            lista = []
            lista.append(resultado[:])
@bot.message_handler(func=lambda message:True) # comando que chama a fun√ß√£o abaixo respondendo toda e qualquer chamada.
def mensagemgeral(message):
    print(f'Nome do usu√°rio que interagiu: ', message.from_user.first_name)
    firstname = message.from_user.first_name #capturando primeiro nome do user no chat
    lastname = message.from_user.last_name
    nomeuser = (f'{firstname}'+f' {lastname}')
    bot.reply_to(message,f"""
        Ol√° {nomeuser}, tudo bem? escolha uma das op√ß√µes abaixo e toque na desejada:
        [‚ÅâÔ∏è] /Ajuda: Op√ß√µes de ajuda ao usu√°rio.
        [‚ûï] /Abrir_chamado: Para abrir um novo chamado
        [üëÄ] /Meus_chamados: Listar chamados abertos
        """)    
bot.infinity_polling()